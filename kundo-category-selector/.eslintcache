[{"C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\index.tsx":"1","C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\ConfigScreen.tsx":"2","C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\Field.tsx":"3","C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\LocalhostWarning.tsx":"4"},{"size":1698,"mtime":1610023535057,"results":"5","hashOfConfig":"6"},{"size":2281,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2086,"mtime":1610031369584,"results":"8","hashOfConfig":"6"},{"size":1232,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"164oovt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\index.tsx",["22","23","24","25"],"import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  AppExtensionSDK,\n  FieldExtensionSDK,\n  SidebarExtensionSDK,\n  DialogExtensionSDK,\n  EditorExtensionSDK,\n  PageExtensionSDK,\n  BaseExtensionSDK,\n  init,\n  locations\n} from 'contentful-ui-extensions-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Config from './components/ConfigScreen';\nimport Field from './components/Field';\n\n\nimport LocalhostWarning from './components/LocalhostWarning';\n\nif (process.env.NODE_ENV === 'development' && window.self === window.top) {\n  // You can remove this if block before deploying your app\n  const root = document.getElementById('root');\n  render(<LocalhostWarning />, root);\n} else {\n  init((sdk: BaseExtensionSDK) => {\n    const root = document.getElementById('root');\n\n    // All possible locations for your app\n    // Feel free to remove unused locations\n    // Dont forget to delete the file too :)\n    const ComponentLocationSettings = [\n      {\n        location: locations.LOCATION_APP_CONFIG,\n        component: <Config sdk={(sdk as unknown) as AppExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_ENTRY_FIELD,\n        component: <Field sdk={(sdk as unknown) as FieldExtensionSDK} />\n      },\n    ];\n\n    // Select a component depending on a location in which the app is rendered.\n    ComponentLocationSettings.forEach(componentLocationSetting => {\n      if (sdk.location.is(componentLocationSetting.location)) {\n        render(componentLocationSetting.component, root);\n      }\n    });\n  });\n}\n",["26","27"],"C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\ConfigScreen.tsx",[],"C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\Field.tsx",["28"],"import React,{useState} from 'react';\nimport { Button, Dropdown, DropdownList, DropdownListItem } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\n\ninterface KundoCategory{\n  slug:string\n  heading_name:string\n}\n\nconst Field = (props: FieldProps) => {\n\n  const [isOpen, setOpen] = useState(false);\n  const [categories,setCategories] = useState<KundoCategory[]>([])\n  const [value, setValue] = useState(props.sdk.field.getValue())\n\n  React.useEffect(() => {\n    const instance: any = props.sdk.parameters.instance\n    fetch(`https://kundo.se/api/properties/${instance.kundoSlug}.json`)\n    .then(x => x.json())\n    .then(json => {\n      setCategories(json[0].categories)\n    })\n  },[])\n  \n\n  if(categories.length === 0) return null;\n  console.log(props)\n  const displayValue = categories.some(x => x.slug === value) ?\n                        categories.find(x => x.slug === value)?.heading_name : \"Välj en kategori\"\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      onClose={() => setOpen(false)}\n      toggleElement={\n        <Button\n          size=\"small\"\n          buttonType=\"muted\"\n          indicateDropdown\n          onClick={() => setOpen(!isOpen)}\n        >\n        {displayValue}\n        </Button>\n      }\n    >\n      <DropdownList>\n        <DropdownListItem\n            onClick={(e) => {\n              setValue(null)\n              setOpen(false)\n              props.sdk.field.setValue(null)\n            }} \n            isTitle={true}\n            isActive={value == null}\n          >\n            Välj en kategori\n        </DropdownListItem>\n        {categories.map(c => \n          <DropdownListItem key={c.slug} \n            onClick={(e) => {\n              setValue(c.slug)\n              setOpen(false)\n              props.sdk.field.setValue(c.slug)\n            }} \n            isActive={c.slug === value}\n          >\n            {c.heading_name}\n          </DropdownListItem>)\n        }\n      </DropdownList>\n    </Dropdown>\n  );\n};\n\nexport default Field;\n","C:\\GIT\\Contentful-UI-Extensions\\kundo-category-selector\\src\\components\\LocalhostWarning.tsx",[],["29","30"],{"ruleId":"31","severity":1,"message":"32","line":7,"column":3,"nodeType":"33","messageId":"34","endLine":7,"endColumn":22},{"ruleId":"31","severity":1,"message":"35","line":8,"column":3,"nodeType":"33","messageId":"34","endLine":8,"endColumn":21},{"ruleId":"31","severity":1,"message":"36","line":9,"column":3,"nodeType":"33","messageId":"34","endLine":9,"endColumn":21},{"ruleId":"31","severity":1,"message":"37","line":10,"column":3,"nodeType":"33","messageId":"34","endLine":10,"endColumn":19},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":5,"nodeType":"44","endLine":27,"endColumn":7,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"@typescript-eslint/no-unused-vars","'SidebarExtensionSDK' is defined but never used.","Identifier","unusedVar","'DialogExtensionSDK' is defined but never used.","'EditorExtensionSDK' is defined but never used.","'PageExtensionSDK' is defined but never used.","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.sdk.parameters.instance'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [props.sdk.parameters.instance]",{"range":"53","text":"54"},[795,797],"[props.sdk.parameters.instance]"]